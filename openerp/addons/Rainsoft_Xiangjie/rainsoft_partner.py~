#-*- coding:utf-8 -*-
import logging
from openerp.osv import fields,osv,orm

_logger = logging.getLogger(__name__)

class rainsoft_partner(osv.osv):
	_name="res.partner"
	_inherit="res.partner"
	_description="add QQ number."
	_columns={
			"QQ":fields.char("QQ",size=16),
			"contract_end_date":fields.date("contract_end_date",select=1)
			}
	#_sql_constraints=[
	#		('rainsoft_partner','unique(name)','partner name must be unique'),
	#		]
	def _check_supplier_company_unique(self,cr,uid,ids,context=None):
		for partner in self.browse(cr,uid,ids,context):
			if partner.supplier and partner.is_company:
				suppliers = self.pool.get('res.partner').search(cr,uid,[('name','=',partner.name),('supplier','=',True),('is_company','=',True)])
				for supplier in suppliers:
					if supplier!=partner.id:			
						return False
		return True


	def _check_customer_company_unique(self,cr,uid,ids,context=None):
		for partner in self.browse(cr,uid,ids,context):
			if partner.customer and partner.is_company:
				customers = self.pool.get('res.partner').search(cr,uid,[('name','=',partner.name),('customer','=',True),('is_company','=',True)])
				for customer in customers:
					if customer!=partner.id:
						return False
		return True

	def _check_supplier_person_unique(self,cr,uid,ids,context=None):
		for partner in self.browse(cr,uid,ids,context):
			if partner.supplier and partner.is_company==False:
				suppliers = self.pool.get('res.partner').search(cr,uid,[('name','=',partner.name),('supplier','=',True),('is_company','=',False)])
				for supplier in suppliers:
					if supplier!=partner.id:
						return False
		return True

	def _check_customer_person_unique(self,cr,uid,ids,context=None):
		for partner in self.browse(cr,uid,ids,context):
			if partner.customer and partner.is_company==False:
				customers = self.pool.get('res.partner').search(cr,uid,[('name','=',partner.name),('customer','=',True),('is_company','=',False)])
				for customer in customres:
					if customer!=partner.id:
						return False
		return True
	_constraints=[
			(_check_supplier_company_unique,'supplier already exists!',['name']),
			(_check_customer_company_unique,'customer already exists!',['name']),
			(_check_supplier_person_unique,'supplier person already exists!',['name']),
			(_check_customer_person_unique,'customer person already exists!',['name']),
			]
rainsoft_partner()


